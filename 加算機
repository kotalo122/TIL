コンピュータの内部　→　０ と １ だけの ２進数でデータが表現され、 AND, OR, NOT, XOR などの論理演算でデータが処理される
＊コンピュータの外部からは、加減乗除の四則演算を行っているように見えるが、実際には論理演算が行われる

加算を編集すれば他の計算もできる
減算：マイナスの数を加算
乗算：プログラムを作って加算を繰り返す
除算：プログラムを作って減算を繰り返し、引けた回数をカウントする

加算器には、半加算器と全加算器がある
半加算器：1桁の2進数を2つ加算
全加算器：1桁の2進数を3つ加算

例）0101 と 0011 という 4 ビットの 2 進数を加算する。
　　　　　最下位ビットの加算　→その桁にある 2 つの数を加算するので、半加算器を使う
　　　　　それ以外の桁　　　　　　　　　→その桁にある 2 つの数と、下位桁からの桁上がりの数を加算するので、全加算器を使う
　　　　　→→ 4 ビットの加算では、半加算器を 1 つと、全加算器を 3 つ使うことになる

半加算器の仕組み
 1 桁の 2 進数を 2 つ加算する
　　4 通りがある
1 ＋ 1 の結果が 1 0 の 2 桁になるので、他の結果も上位桁に 0 を置いて 2 桁に統一している

データに名前を付けて、真理値表を書く
加算する数を X および Y 、結果を C および S とする（C は、 Carry （桁上がり）という意味、 S は、 Sum （和）という意味）
X	Y	C	S
0	0	0	0
0	1	0	1
1	0	0	1
1	1	1	0
C は、 X と Y の両方が 1 のときだけ 1 になる　→ X と Y の AND 演算
S は、 X と Y のどちらか一方だけが 1 のときだけ 1 になる　→ X と Y の XOR 演算

全加算器の仕組み
1 桁の 2 進数を 3 つ加算する半加算器の仕組み　
半加算器で 1 桁の 2 進数を 2 つ加算できる
　　　→→半加算器が 2 つあれば、 1 桁の 2 進数を 3 つ加算できる　（全加算器になる）
X と Y と C´（ C´ は、下位桁からの桁上がりを意味）の加算結果が、S と C から出力される

X と Y を半加算器 (1) で加算し、
その結果の S と C´ を半加算器 (2) で加算し、
その結果の S が、全加算器の S になります。

全加算器の C 　→ 半加算器 (1) の C と　半加算器 (2) の C を　OR 演算して得られる
　　　　　　　　　　　　　　　　　　　　　　　　　　　　半加算器 (1) または半加算器 (2) のいずれかで桁上がりがあれば、それが全加算器の桁上がりになる
